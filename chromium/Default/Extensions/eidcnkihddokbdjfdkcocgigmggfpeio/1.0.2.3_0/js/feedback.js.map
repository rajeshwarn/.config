{"version":3,"sources":["app/feedback.js"],"names":[],"mappingsfile":"build\\js\\feedback.js","sourcesContent":["(function () {\r\n    var Toast = function () {\r\n        const _DURATION = 2000;\r\n        var _toast_container = null;\r\n        var _timeoutId;\r\n        if (window.chrome && window.chrome.app.window) {\r\n            chrome.storage.local.get(\"config\", function (result) {\r\n                var config = result.config;\r\n                var link = document.createElement('link');\r\n                link.setAttribute('rel', 'stylesheet');\r\n                if (config && config.settings && config.settings.theme) {\r\n                    link.href = \"css/\" + config.settings.theme;\r\n                } else {\r\n\r\n                    link.href = \"css/primary.css\";\r\n                }\r\n                document.head.appendChild(link);\r\n            });\r\n        } else if (window.process && window.process.type) {\r\n            var link = document.createElement('link');\r\n            link.href = \"css/primary.css\";\r\n            link.setAttribute('rel', 'stylesheet');\r\n            try {\r\n                var config = JSON.parse(localStorage.getItem(\"config\")).config;            \r\n            \r\n                if (config && config.settings && config.settings.theme) {\r\n                    link.href = \"css/\" + config.settings.theme;\r\n                }\r\n            } catch(e) {\r\n                link.href = \"css/primary.css\";\r\n            }\r\n            document.head.appendChild(link);\r\n\r\n        }\r\n\r\n        function removeToast() {\r\n            if (!_toast_container) {\r\n                return;\r\n            }\r\n            _toast_container.parentElement.removeChild(_toast_container);\r\n        }\r\n\r\n        this.show = function (options) {\r\n            var prev = document.querySelector('.toast_container');\r\n            if (prev) {\r\n                prev.parentElement.removeChild(_toast_container);\r\n            }\r\n            clearTimeout(_timeoutId);\r\n            _toast_container = document.createElement('div');\r\n            _toast_container.classList.add('toast_container');\r\n            _toast_container.classList.add('toast_fadein');\r\n\r\n\r\n            var toast = document.createElement('div');\r\n            toast.classList.add('toast');\r\n            if (options.content) {\r\n                toast.innerHTML = options.content;\r\n            }\r\n            _toast_container.appendChild(toast);\r\n\r\n            document.body.appendChild(_toast_container);\r\n\r\n            if (options.duration == null || options.duration == undefined || isNaN(optios.duration)) {\r\n                options.duration = _DURATION;\r\n            }\r\n            _timeoutId = setTimeout(this.hide, options.duration);\r\n\r\n        },\r\n            this.hide = function () {\r\n                if (!_toast_container) {\r\n                    return;\r\n                }\r\n                clearTimeout(_timeoutId);\r\n                _toast_container.classList.add('toast_fadeout');\r\n\r\n                _toast_container.addEventListener('webkitAnimationEnd', removeToast);\r\n                _toast_container.addEventListener('animationEnd', removeToast);\r\n                _toast_container.addEventListener('msAnimationEnd', removeToast);\r\n                _toast_container.addEventListener('oAnimationEnd', removeToast);\r\n            }\r\n\r\n    }\r\n    window.Toast = Toast;\r\n\r\n})();\r\n(function () {\r\n    \r\n    var toast = new Toast();\r\n    var closeBtn = document.getElementById('close_btn');\r\n\r\n    var sendBtn = document.getElementById('send_btn');\r\n    var loader = document.getElementById('preloader');\r\n    var cancelBtn = document.getElementById('cancel_btn');\r\n    var messageTxt = document.getElementById('message_txt');\r\n    var emailTxt = document.getElementById('email_txt');\r\n    sendBtn.toggle = false;\r\n    messageTxt.addEventListener(\"textInput\", function () {\r\n        messageTxt.classList.remove('validate-error');\r\n    });\r\n    closeBtn.addEventListener('click', function () {\r\n        if (window.chrome && window.chrome.app.window) {\r\n            chrome.app.window.current().close();\r\n        } else if (window.process && window.process.type) {\r\n            const remote = require('electron').remote;\r\n            var currentWindow = remote.getCurrentWindow();\r\n            currentWindow.close();\r\n        }\r\n    });\r\n\r\n    sendBtn.addEventListener('click', function () {\r\n        var message = messageTxt.value.trim();\r\n        var email = emailTxt.value;\r\n\r\n        if (message != \"\") {\r\n            var issue = JSON.stringify({ FeedbackText: message, Email: email });\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.addEventListener('readystatechange', function () {\r\n                if (xhr.readyState == 4) {\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304) {\r\n                        loader.style.display = 'none';\r\n                        chrome.app.window.current().close();\r\n                    } else {\r\n\r\n\r\n                        loader.style.display = 'none';\r\n                        toast.show({ content: \"Unable to send your message\" });\r\n                    }\r\n                }\r\n            });\r\n            xhr.open('POST', 'http://www.salmonplayer.com/api/FeedbackApi');\r\n            xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\r\n            xhr.send(issue);\r\n            loader.style.display = 'block';\r\n        } else {\r\n            messageTxt.classList.add('validate-error')\r\n        }\r\n    });\r\n})()\r\n"]}