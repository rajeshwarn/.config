{"version":3,"sources":["app/chrome.js"],"names":[],"mappingsfile":"build\\chrome.js","sourcesContent":["/**\r\n * Listens for the app launching, then creates the window.\r\n *\r\n * @see http://developer.chrome.com/apps/app.runtime.html\r\n * @see http://developer.chrome.com/apps/app.window.html\r\n */\r\nvar heightPercent = 68;\r\nvar widthPercent = 23;\r\nvar APP_HEIGHT = 730;\r\nvar APP_WIDTH = 445;\r\nvar _items = [];\r\nvar _folders = [];\r\n/*detect first run or update*/\r\n\r\nchrome.runtime.onInstalled.addListener(function(details) {\r\n\r\n    if (details.reason == \"install\") {\r\n        chrome.storage.local.set({ \"initRun\": true });\r\n\r\n    } else if (details.reason == \"update\") {\r\n        var thisVersion = chrome.runtime.getManifest().version;\r\n        // console.log(\"Updated from \" + details.previousVersion + \" to \" + thisVersion + \"!\");\r\n        chrome.storage.local.set({ \"initRun\": false });\r\n        if (thisVersion != details.previousVersion) {\r\n            chrome.storage.local.set({ \"update\": true });\r\n        } else {\r\n            chrome.storage.local.set({ \"update\": false });\r\n        }\r\n    }\r\n});\r\nchrome.app.runtime.onLaunched.addListener(function(launchData) {\r\n\r\n    // id = \"Chrome-\" + Math.random();\r\n    // chrome.storage.sync.get(\"uid\", function(data){\r\n        \r\n    //     var uid = data.uid;\r\n    //     console.log(uid);\r\n    //     if(!uid) {\r\n    //         uid = generateGUID();\r\n    //         chrome.storage.sync.set({\"uid\": uid});\r\n            \r\n    //     }\r\n    //     updateUid(uid);\r\n    // })\r\n    \r\n    chrome.system.display.getInfo(function(displayInfo) {\r\n        // Detecting primary monitor\r\n        var primary = displayInfo.filter(function(item) {\r\n            return (item.isPrimary == true);\r\n        });\r\n        var screenInfo = primary[0];\r\n\r\n        //try {\r\n        //    if (screenInfo.rotation == 90) {\r\n\r\n        //        heightPercent = 38;\r\n        //        widthPercent = 40;\r\n        //    }\r\n        //    APP_HEIGHT = parseInt(screenInfo.bounds.height * heightPercent / 100);\r\n        //    APP_WIDTH =parseInt( screenInfo.bounds.width * widthPercent / 100);\r\n        //}\r\n        //catch(e){\r\n\r\n        //}\r\n\r\n        chrome.app.window.create('index.html', {\r\n                id: 'main_wnd',\r\n                outerBounds: {\r\n                    left: screenInfo.workArea.width - APP_WIDTH,\r\n                    top: screenInfo.workArea.height - APP_HEIGHT,\r\n                    width: APP_WIDTH,\r\n                    height: APP_HEIGHT,\r\n                    minWidth: 390,\r\n                    minHeight: 60,\r\n\r\n                },\r\n                frame: 'none',\r\n\r\n                /* alwaysOnTop: true*/\r\n            },\r\n            function(createdWindow) {\r\n                createdWindow.onClosed.addListener(function() {\r\n\r\n                    RestoreService.setTracks(_items, window.close);\r\n                    RestoreService.setFolders(_folders, window.close);\r\n                });\r\n\r\n                var x = createdWindow.outerBounds.left,\r\n                    y = createdWindow.outerBounds.top;\r\n                createdWindow.onBoundsChanged.addListener(function() {\r\n                    //var bounds = createdWindow.outerBounds;\r\n\r\n                    //    if (bounds.left > screenInfo.workArea.width - APP_WIDTH - 100 && bounds.top > screenInfo.workArea.height - APP_HEIGHT - 100) {\r\n                    //        bounds.left = screenInfo.workArea.width - APP_WIDTH;\r\n                    //        bounds.top = screenInfo.workArea.height - APP_HEIGHT;\r\n                    //    }\r\n\r\n                });\r\n            });\r\n\r\n    });\r\n\r\n\r\n});\r\n\r\n// function generateGUID() {\r\n//     var d = new Date().getTime();\r\n//     var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n//         var r = (d + Math.random() * 16) % 16 | 0;\r\n//         d = Math.floor(d / 16);\r\n//         return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n//     });\r\n//     return uuid;\r\n// }\r\n// function updateUid(uid) {\r\n//              var issue = JSON.stringify({ Email: \"\", Uid: uid, Platform:  \"chrome\"});\r\n//              var xhr = new XMLHttpRequest();\r\n//              xhr.addEventListener('readystatechange', function() {\r\n//                  debugger;\r\n//                  if (xhr.readyState == 4) {\r\n//                      if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304) {\r\n\r\n//                      } else {\r\n\r\n\r\n\r\n\r\n//                      }\r\n//                  }\r\n//              });\r\n//              xhr.open('POST', 'http://localhost:41449/api/ActiveUsersApi');\r\n//             xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\r\n//             xhr.send(issue);\r\n// }\r\n"]}